<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.tanhua.dubbo.server.api.TestQuanzi" time="43.737" tests="4" errors="4" skipped="0" failures="0">
  <properties>
    <property name="sun.desktop" value="windows"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="GBK"/>
    <property name="java.class.path" value="E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service\target\test-classes;E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service\target\classes;E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-interface\target\my-tanhua-dubbo-interface-1.0-SNAPSHOT.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-starter\2.1.0.RELEASE\spring-boot-starter-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot\2.1.0.RELEASE\spring-boot-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-autoconfigure\2.1.0.RELEASE\spring-boot-autoconfigure-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-starter-logging\2.1.0.RELEASE\spring-boot-starter-logging-2.1.0.RELEASE.jar;E:\APP\backup_repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\APP\backup_repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\APP\backup_repository\org\apache\logging\log4j\log4j-to-slf4j\2.11.1\log4j-to-slf4j-2.11.1.jar;E:\APP\backup_repository\org\apache\logging\log4j\log4j-api\2.11.1\log4j-api-2.11.1.jar;E:\APP\backup_repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;E:\APP\backup_repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;E:\APP\backup_repository\org\springframework\spring-core\5.1.2.RELEASE\spring-core-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\spring-jcl\5.1.2.RELEASE\spring-jcl-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-starter-test\2.1.0.RELEASE\spring-boot-starter-test-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-test\2.1.0.RELEASE\spring-boot-test-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-test-autoconfigure\2.1.0.RELEASE\spring-boot-test-autoconfigure-2.1.0.RELEASE.jar;E:\APP\backup_repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;E:\APP\backup_repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;E:\APP\backup_repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;E:\APP\backup_repository\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;E:\APP\backup_repository\org\assertj\assertj-core\3.11.1\assertj-core-3.11.1.jar;E:\APP\backup_repository\org\mockito\mockito-core\2.23.0\mockito-core-2.23.0.jar;E:\APP\backup_repository\net\bytebuddy\byte-buddy\1.9.3\byte-buddy-1.9.3.jar;E:\APP\backup_repository\net\bytebuddy\byte-buddy-agent\1.9.3\byte-buddy-agent-1.9.3.jar;E:\APP\backup_repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;E:\APP\backup_repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\APP\backup_repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;E:\APP\backup_repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;E:\APP\backup_repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;E:\APP\backup_repository\org\springframework\spring-test\5.1.2.RELEASE\spring-test-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\xmlunit\xmlunit-core\2.6.2\xmlunit-core-2.6.2.jar;E:\APP\backup_repository\com\alibaba\boot\dubbo-spring-boot-starter\0.2.0\dubbo-spring-boot-starter-0.2.0.jar;E:\APP\backup_repository\org\apache\curator\curator-framework\2.12.0\curator-framework-2.12.0.jar;E:\APP\backup_repository\org\apache\curator\curator-client\2.12.0\curator-client-2.12.0.jar;E:\APP\backup_repository\com\google\guava\guava\16.0.1\guava-16.0.1.jar;E:\APP\backup_repository\com\alibaba\boot\dubbo-spring-boot-autoconfigure\0.2.0\dubbo-spring-boot-autoconfigure-0.2.0.jar;E:\APP\backup_repository\com\alibaba\dubbo\2.6.4\dubbo-2.6.4.jar;E:\APP\backup_repository\org\springframework\spring-context\5.1.2.RELEASE\spring-context-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\spring-aop\5.1.2.RELEASE\spring-aop-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\spring-beans\5.1.2.RELEASE\spring-beans-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\spring-expression\5.1.2.RELEASE\spring-expression-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;E:\APP\backup_repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\APP\backup_repository\org\apache\zookeeper\zookeeper\3.4.13\zookeeper-3.4.13.jar;E:\APP\backup_repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;E:\APP\backup_repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;E:\APP\backup_repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\APP\backup_repository\jline\jline\0.9.94\jline-0.9.94.jar;E:\APP\backup_repository\org\apache\yetus\audience-annotations\0.5.0\audience-annotations-0.5.0.jar;E:\APP\backup_repository\io\netty\netty\3.10.6.Final\netty-3.10.6.Final.jar;E:\APP\backup_repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-starter-data-mongodb\2.1.0.RELEASE\spring-boot-starter-data-mongodb-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\mongodb\mongodb-driver\3.8.2\mongodb-driver-3.8.2.jar;E:\APP\backup_repository\org\springframework\data\spring-data-mongodb\2.1.2.RELEASE\spring-data-mongodb-2.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\spring-tx\5.1.2.RELEASE\spring-tx-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\data\spring-data-commons\2.1.2.RELEASE\spring-data-commons-2.1.2.RELEASE.jar;E:\APP\backup_repository\org\mongodb\mongodb-driver-sync\3.9.1\mongodb-driver-sync-3.9.1.jar;E:\APP\backup_repository\org\mongodb\bson\3.8.2\bson-3.8.2.jar;E:\APP\backup_repository\org\mongodb\mongodb-driver-core\3.8.2\mongodb-driver-core-3.8.2.jar;E:\APP\backup_repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;E:\APP\backup_repository\joda-time\joda-time\2.9.9\joda-time-2.9.9.jar;E:\APP\backup_repository\io\netty\netty-all\4.1.32.Final\netty-all-4.1.32.Final.jar;E:\APP\backup_repository\junit\junit\4.12\junit-4.12.jar;E:\APP\backup_repository\org\projectlombok\lombok\1.18.4\lombok-1.18.4.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value="Asia/Shanghai"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Windows 10"/>
    <property name="user.country" value="CN"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="E:\APP\jdk\jre\bin"/>
    <property name="sun.java.command" value="C:\Users\Lenovo\AppData\Local\Temp\surefire1224182923351581128\surefirebooter7297449142630470507.jar C:\Users\Lenovo\AppData\Local\Temp\surefire1224182923351581128 2021-01-12T09-58-57_853-jvmRun1 surefire1822698498326953311tmp surefire_08142993762380318063tmp"/>
    <property name="surefire.test.class.path" value="E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service\target\test-classes;E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service\target\classes;E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-interface\target\my-tanhua-dubbo-interface-1.0-SNAPSHOT.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-starter\2.1.0.RELEASE\spring-boot-starter-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot\2.1.0.RELEASE\spring-boot-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-autoconfigure\2.1.0.RELEASE\spring-boot-autoconfigure-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-starter-logging\2.1.0.RELEASE\spring-boot-starter-logging-2.1.0.RELEASE.jar;E:\APP\backup_repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\APP\backup_repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\APP\backup_repository\org\apache\logging\log4j\log4j-to-slf4j\2.11.1\log4j-to-slf4j-2.11.1.jar;E:\APP\backup_repository\org\apache\logging\log4j\log4j-api\2.11.1\log4j-api-2.11.1.jar;E:\APP\backup_repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;E:\APP\backup_repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;E:\APP\backup_repository\org\springframework\spring-core\5.1.2.RELEASE\spring-core-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\spring-jcl\5.1.2.RELEASE\spring-jcl-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-starter-test\2.1.0.RELEASE\spring-boot-starter-test-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-test\2.1.0.RELEASE\spring-boot-test-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-test-autoconfigure\2.1.0.RELEASE\spring-boot-test-autoconfigure-2.1.0.RELEASE.jar;E:\APP\backup_repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;E:\APP\backup_repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;E:\APP\backup_repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;E:\APP\backup_repository\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;E:\APP\backup_repository\org\assertj\assertj-core\3.11.1\assertj-core-3.11.1.jar;E:\APP\backup_repository\org\mockito\mockito-core\2.23.0\mockito-core-2.23.0.jar;E:\APP\backup_repository\net\bytebuddy\byte-buddy\1.9.3\byte-buddy-1.9.3.jar;E:\APP\backup_repository\net\bytebuddy\byte-buddy-agent\1.9.3\byte-buddy-agent-1.9.3.jar;E:\APP\backup_repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;E:\APP\backup_repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\APP\backup_repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;E:\APP\backup_repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;E:\APP\backup_repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;E:\APP\backup_repository\org\springframework\spring-test\5.1.2.RELEASE\spring-test-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\xmlunit\xmlunit-core\2.6.2\xmlunit-core-2.6.2.jar;E:\APP\backup_repository\com\alibaba\boot\dubbo-spring-boot-starter\0.2.0\dubbo-spring-boot-starter-0.2.0.jar;E:\APP\backup_repository\org\apache\curator\curator-framework\2.12.0\curator-framework-2.12.0.jar;E:\APP\backup_repository\org\apache\curator\curator-client\2.12.0\curator-client-2.12.0.jar;E:\APP\backup_repository\com\google\guava\guava\16.0.1\guava-16.0.1.jar;E:\APP\backup_repository\com\alibaba\boot\dubbo-spring-boot-autoconfigure\0.2.0\dubbo-spring-boot-autoconfigure-0.2.0.jar;E:\APP\backup_repository\com\alibaba\dubbo\2.6.4\dubbo-2.6.4.jar;E:\APP\backup_repository\org\springframework\spring-context\5.1.2.RELEASE\spring-context-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\spring-aop\5.1.2.RELEASE\spring-aop-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\spring-beans\5.1.2.RELEASE\spring-beans-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\spring-expression\5.1.2.RELEASE\spring-expression-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;E:\APP\backup_repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\APP\backup_repository\org\apache\zookeeper\zookeeper\3.4.13\zookeeper-3.4.13.jar;E:\APP\backup_repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;E:\APP\backup_repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;E:\APP\backup_repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\APP\backup_repository\jline\jline\0.9.94\jline-0.9.94.jar;E:\APP\backup_repository\org\apache\yetus\audience-annotations\0.5.0\audience-annotations-0.5.0.jar;E:\APP\backup_repository\io\netty\netty\3.10.6.Final\netty-3.10.6.Final.jar;E:\APP\backup_repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-starter-data-mongodb\2.1.0.RELEASE\spring-boot-starter-data-mongodb-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\mongodb\mongodb-driver\3.8.2\mongodb-driver-3.8.2.jar;E:\APP\backup_repository\org\springframework\data\spring-data-mongodb\2.1.2.RELEASE\spring-data-mongodb-2.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\spring-tx\5.1.2.RELEASE\spring-tx-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\data\spring-data-commons\2.1.2.RELEASE\spring-data-commons-2.1.2.RELEASE.jar;E:\APP\backup_repository\org\mongodb\mongodb-driver-sync\3.9.1\mongodb-driver-sync-3.9.1.jar;E:\APP\backup_repository\org\mongodb\bson\3.8.2\bson-3.8.2.jar;E:\APP\backup_repository\org\mongodb\mongodb-driver-core\3.8.2\mongodb-driver-core-3.8.2.jar;E:\APP\backup_repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;E:\APP\backup_repository\joda-time\joda-time\2.9.9\joda-time-2.9.9.jar;E:\APP\backup_repository\io\netty\netty-all\4.1.32.Final\netty-all-4.1.32.Final.jar;E:\APP\backup_repository\junit\junit\4.12\junit-4.12.jar;E:\APP\backup_repository\org\projectlombok\lombok\1.18.4\lombok-1.18.4.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Lenovo"/>
    <property name="user.language" value="zh"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="E:\APP\jdk\jre"/>
    <property name="basedir" value="E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service"/>
    <property name="file.separator" value="\"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="C:\Users\Lenovo\AppData\Local\Temp\surefire1224182923351581128\surefirebooter7297449142630470507.jar"/>
    <property name="sun.boot.class.path" value="E:\APP\jdk\jre\lib\resources.jar;E:\APP\jdk\jre\lib\rt.jar;E:\APP\jdk\jre\lib\sunrsasign.jar;E:\APP\jdk\jre\lib\jsse.jar;E:\APP\jdk\jre\lib\jce.jar;E:\APP\jdk\jre\lib\charsets.jar;E:\APP\jdk\jre\lib\jfr.jar;E:\APP\jdk\jre\classes"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_251-b08"/>
    <property name="user.name" value="Lenovo"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.endorsed.dirs" value="E:\APP\jdk\jre\lib\endorsed"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="GBK"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="E:\APP\backup_repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\Lenovo\AppData\Local\Temp\"/>
    <property name="idea.version" value="2018.1.6"/>
    <property name="java.version" value="1.8.0_251"/>
    <property name="user.dir" value="E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.library.path" value="E:\APP\jdk\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;E:\vm\bin\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;E:\svn\bin;E:\nodejs\;E:\Git\cmd;E:\tsvn\bin;C:\Program Files\Common Files\Autodesk Shared\;E:\apache-maven-3.6.3\bin;E:\APP\jdk\bin;E:\apache-maven-3.6.3\bin;E:\APP\rocketmq\rocketmq-all-4.5.0-bin-release\rocketmq-all-4.5.0-bin-release\bin;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;E:\Microsoft VS Code\bin;C:\Users\Lenovo\AppData\Roaming\npm;C:\Users\Lenovo\AppData\Local\Programs\Fiddler;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;;."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.251-b08"/>
    <property name="java.ext.dirs" value="E:\APP\jdk\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="maven.repo.local" value="E:\APP\backup_repository"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="testSaveLikeComment" classname="com.tanhua.dubbo.server.api.TestQuanzi" time="0.001">
    <error message="Failed to load ApplicationContext" type="java.lang.IllegalStateException"><![CDATA[java.lang.IllegalStateException: Failed to load ApplicationContext
Caused by: java.lang.IllegalStateException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416750875&version=1.0.0 to registry 192.168.247.131:2181, cause: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416750875&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416750875&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
Caused by: java.lang.IllegalStateException: Zookeeper is not connected yet!
]]></error>
    <system-out><![CDATA[09:59:03.409 [main] DEBUG org.springframework.test.context.junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class com.tanhua.dubbo.server.api.TestQuanzi]
09:59:03.420 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
09:59:03.431 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
09:59:03.457 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.tanhua.dubbo.server.api.TestQuanzi] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
09:59:03.475 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.tanhua.dubbo.server.api.TestQuanzi], using SpringBootContextLoader
09:59:03.479 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.tanhua.dubbo.server.api.TestQuanzi]: class path resource [com/tanhua/dubbo/server/api/TestQuanzi-context.xml] does not exist
09:59:03.480 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.tanhua.dubbo.server.api.TestQuanzi]: class path resource [com/tanhua/dubbo/server/api/TestQuanziContext.groovy] does not exist
09:59:03.480 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.tanhua.dubbo.server.api.TestQuanzi]: no resource found for suffixes {-context.xml, Context.groovy}.
09:59:03.482 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.tanhua.dubbo.server.api.TestQuanzi]: TestQuanzi does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
09:59:03.533 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.tanhua.dubbo.server.api.TestQuanzi]
09:59:03.658 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service\target\classes\com\tanhua\dubbo\server\DubboApplication.class]
09:59:03.660 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.tanhua.dubbo.server.DubboApplication for test class com.tanhua.dubbo.server.api.TestQuanzi
09:59:03.824 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.tanhua.dubbo.server.api.TestQuanzi]: using defaults.
09:59:03.824 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
09:59:03.835 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
09:59:03.845 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4988d8b8, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@c0c2f8d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@305b7c14, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6913c1fb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@66d18979, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@bccb269, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@609cd4d8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@17f7cd29, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7d8704ef, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@13b6aecc, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@158a8276]
09:59:03.847 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.tanhua.dubbo.server.api.TestQuanzi]
09:59:03.847 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.tanhua.dubbo.server.api.TestQuanzi]
09:59:03.849 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.tanhua.dubbo.server.api.TestQuanzi]
09:59:03.849 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.tanhua.dubbo.server.api.TestQuanzi]
09:59:03.850 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.tanhua.dubbo.server.api.TestQuanzi]
09:59:03.850 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.tanhua.dubbo.server.api.TestQuanzi]
09:59:03.854 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@757277dc testClass = TestQuanzi, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@687e99d8 testClass = TestQuanzi, locations = '{}', classes = '{class com.tanhua.dubbo.server.DubboApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@27d415d9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5204062d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@15b3e5b, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@27fe3806], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
09:59:03.855 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.tanhua.dubbo.server.api.TestQuanzi]
09:59:03.855 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.tanhua.dubbo.server.api.TestQuanzi]
09:59:03.859 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@757277dc testClass = TestQuanzi, testInstance = com.tanhua.dubbo.server.api.TestQuanzi@10d68fcd, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@687e99d8 testClass = TestQuanzi, locations = '{}', classes = '{class com.tanhua.dubbo.server.DubboApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@27d415d9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5204062d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@15b3e5b, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@27fe3806], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]].
09:59:03.889 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
2021-01-12 09:59:04.088  INFO 6484 --- [           main] a.b.d.c.e.WelcomeLogoApplicationListener : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.4) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

2021-01-12 09:59:04.094  INFO 6484 --- [           main] e.OverrideDubboConfigApplicationListener : Dubbo Config was overridden by externalized configuration {dubbo.application.name=dubbo-provider-tanhua, dubbo.protocol.name=dubbo, dubbo.protocol.port=20880, dubbo.registry.address=zookeeper://192.168.247.131:2181, dubbo.registry.client=zkclient, dubbo.scan.basePackages=com.tanhua.dubbo.server}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.1.0.RELEASE)

2021-01-12 09:59:04.219  INFO 6484 --- [           main] com.tanhua.dubbo.server.api.TestQuanzi   : Starting TestQuanzi on DESKTOP-A7UV77A with PID 6484 (started by Lenovo in E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service)
2021-01-12 09:59:04.220  INFO 6484 --- [           main] com.tanhua.dubbo.server.api.TestQuanzi   : No active profile set, falling back to default profiles: default
2021-01-12 09:59:04.680  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.ApplicationConfig#0, class : com.alibaba.dubbo.config.ApplicationConfig] has been registered.
2021-01-12 09:59:04.681  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.ApplicationConfig#0] has been registered.
2021-01-12 09:59:04.682  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.RegistryConfig#0, class : com.alibaba.dubbo.config.RegistryConfig] has been registered.
2021-01-12 09:59:04.683  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.RegistryConfig#0] has been registered.
2021-01-12 09:59:04.683  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.ProtocolConfig#0, class : com.alibaba.dubbo.config.ProtocolConfig] has been registered.
2021-01-12 09:59:04.684  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.ProtocolConfig#0] has been registered.
2021-01-12 09:59:04.781  INFO 6484 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2021-01-12 09:59:04.811  INFO 6484 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23ms. Found 0 repository interfaces.
2021-01-12 09:59:04.881  INFO 6484 --- [           main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2021-01-12 09:59:05.122  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:05.124  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:05.125  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:05.164  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.ApplicationConfig#0] have been binding by prefix of configuration properties : dubbo.application
2021-01-12 09:59:05.178  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
2021-01-12 09:59:05.199  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
2021-01-12 09:59:09.777  INFO 6484 --- [           main] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[192.168.247.131:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2021-01-12 09:59:09.866  INFO 6484 --- [8.247.131:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:35}] to 192.168.247.131:27017
2021-01-12 09:59:09.872  INFO 6484 --- [8.247.131:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=192.168.247.131:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 3]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4362900}
2021-01-12 09:59:10.383  INFO 6484 --- [           main] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:36}] to 192.168.247.131:27017
2021-01-12 09:59:22.899  INFO 6484 --- [clientConnector] org.apache.zookeeper.ZooKeeper           : Client environment:zookeeper.version=3.4.13-2d71af4dbe22557fda74f9a9b4309b15a7487f03, built on 06/29/2018 00:39 GMT
2021-01-12 09:59:22.899  INFO 6484 --- [clientConnector] org.apache.zookeeper.ZooKeeper           : Client environment:host.name=DESKTOP-A7UV77A
2021-01-12 09:59:22.900  INFO 6484 --- [clientConnector] org.apache.zookeeper.ZooKeeper           : Client environment:java.version=1.8.0_251
2021-01-12 09:59:22.900  INFO 6484 --- [clientConnector] org.apache.zookeeper.ZooKeeper           : Client environment:java.vendor=Oracle Corporation
2021-01-12 09:59:22.900  INFO 6484 --- [clientConnector] org.apache.zookeeper.ZooKeeper           : Client environment:java.home=E:\APP\jdk\jre
2021-01-12 09:59:22.900  INFO 6484 --- [clientConnector] org.apache.zookeeper.ZooKeeper           : Client environment:java.class.path=E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service\target\test-classes;E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service\target\classes;E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-interface\target\my-tanhua-dubbo-interface-1.0-SNAPSHOT.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-starter\2.1.0.RELEASE\spring-boot-starter-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot\2.1.0.RELEASE\spring-boot-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-autoconfigure\2.1.0.RELEASE\spring-boot-autoconfigure-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-starter-logging\2.1.0.RELEASE\spring-boot-starter-logging-2.1.0.RELEASE.jar;E:\APP\backup_repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;E:\APP\backup_repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;E:\APP\backup_repository\org\apache\logging\log4j\log4j-to-slf4j\2.11.1\log4j-to-slf4j-2.11.1.jar;E:\APP\backup_repository\org\apache\logging\log4j\log4j-api\2.11.1\log4j-api-2.11.1.jar;E:\APP\backup_repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;E:\APP\backup_repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;E:\APP\backup_repository\org\springframework\spring-core\5.1.2.RELEASE\spring-core-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\spring-jcl\5.1.2.RELEASE\spring-jcl-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\yaml\snakeyaml\1.23\snakeyaml-1.23.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-starter-test\2.1.0.RELEASE\spring-boot-starter-test-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-test\2.1.0.RELEASE\spring-boot-test-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-test-autoconfigure\2.1.0.RELEASE\spring-boot-test-autoconfigure-2.1.0.RELEASE.jar;E:\APP\backup_repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;E:\APP\backup_repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;E:\APP\backup_repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;E:\APP\backup_repository\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;E:\APP\backup_repository\org\assertj\assertj-core\3.11.1\assertj-core-3.11.1.jar;E:\APP\backup_repository\org\mockito\mockito-core\2.23.0\mockito-core-2.23.0.jar;E:\APP\backup_repository\net\bytebuddy\byte-buddy\1.9.3\byte-buddy-1.9.3.jar;E:\APP\backup_repository\net\bytebuddy\byte-buddy-agent\1.9.3\byte-buddy-agent-1.9.3.jar;E:\APP\backup_repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;E:\APP\backup_repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;E:\APP\backup_repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;E:\APP\backup_repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;E:\APP\backup_repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;E:\APP\backup_repository\org\springframework\spring-test\5.1.2.RELEASE\spring-test-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\xmlunit\xmlunit-core\2.6.2\xmlunit-core-2.6.2.jar;E:\APP\backup_repository\com\alibaba\boot\dubbo-spring-boot-starter\0.2.0\dubbo-spring-boot-starter-0.2.0.jar;E:\APP\backup_repository\org\apache\curator\curator-framework\2.12.0\curator-framework-2.12.0.jar;E:\APP\backup_repository\org\apache\curator\curator-client\2.12.0\curator-client-2.12.0.jar;E:\APP\backup_repository\com\google\guava\guava\16.0.1\guava-16.0.1.jar;E:\APP\backup_repository\com\alibaba\boot\dubbo-spring-boot-autoconfigure\0.2.0\dubbo-spring-boot-autoconfigure-0.2.0.jar;E:\APP\backup_repository\com\alibaba\dubbo\2.6.4\dubbo-2.6.4.jar;E:\APP\backup_repository\org\springframework\spring-context\5.1.2.RELEASE\spring-context-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\spring-aop\5.1.2.RELEASE\spring-aop-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\spring-beans\5.1.2.RELEASE\spring-beans-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\spring-expression\5.1.2.RELEASE\spring-expression-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;E:\APP\backup_repository\org\jboss\netty\netty\3.2.5.Final\netty-3.2.5.Final.jar;E:\APP\backup_repository\org\apache\zookeeper\zookeeper\3.4.13\zookeeper-3.4.13.jar;E:\APP\backup_repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;E:\APP\backup_repository\org\slf4j\slf4j-log4j12\1.7.25\slf4j-log4j12-1.7.25.jar;E:\APP\backup_repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\APP\backup_repository\jline\jline\0.9.94\jline-0.9.94.jar;E:\APP\backup_repository\org\apache\yetus\audience-annotations\0.5.0\audience-annotations-0.5.0.jar;E:\APP\backup_repository\io\netty\netty\3.10.6.Final\netty-3.10.6.Final.jar;E:\APP\backup_repository\com\github\sgroschupf\zkclient\0.1\zkclient-0.1.jar;E:\APP\backup_repository\org\springframework\boot\spring-boot-starter-data-mongodb\2.1.0.RELEASE\spring-boot-starter-data-mongodb-2.1.0.RELEASE.jar;E:\APP\backup_repository\org\mongodb\mongodb-driver\3.8.2\mongodb-driver-3.8.2.jar;E:\APP\backup_repository\org\springframework\data\spring-data-mongodb\2.1.2.RELEASE\spring-data-mongodb-2.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\spring-tx\5.1.2.RELEASE\spring-tx-5.1.2.RELEASE.jar;E:\APP\backup_repository\org\springframework\data\spring-data-commons\2.1.2.RELEASE\spring-data-commons-2.1.2.RELEASE.jar;E:\APP\backup_repository\org\mongodb\mongodb-driver-sync\3.9.1\mongodb-driver-sync-3.9.1.jar;E:\APP\backup_repository\org\mongodb\bson\3.8.2\bson-3.8.2.jar;E:\APP\backup_repository\org\mongodb\mongodb-driver-core\3.8.2\mongodb-driver-core-3.8.2.jar;E:\APP\backup_repository\org\apache\commons\commons-lang3\3.7\commons-lang3-3.7.jar;E:\APP\backup_repository\joda-time\joda-time\2.9.9\joda-time-2.9.9.jar;E:\APP\backup_repository\io\netty\netty-all\4.1.32.Final\netty-all-4.1.32.Final.jar;E:\APP\backup_repository\junit\junit\4.12\junit-4.12.jar;E:\APP\backup_repository\org\projectlombok\lombok\1.18.4\lombok-1.18.4.jar;
2021-01-12 09:59:22.901  INFO 6484 --- [clientConnector] org.apache.zookeeper.ZooKeeper           : Client environment:java.library.path=E:\APP\jdk\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;E:\vm\bin\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\NetSarang\Xshell 6\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;E:\svn\bin;E:\nodejs\;E:\Git\cmd;E:\tsvn\bin;C:\Program Files\Common Files\Autodesk Shared\;E:\apache-maven-3.6.3\bin;E:\APP\jdk\bin;E:\apache-maven-3.6.3\bin;E:\APP\rocketmq\rocketmq-all-4.5.0-bin-release\rocketmq-all-4.5.0-bin-release\bin;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;E:\Microsoft VS Code\bin;C:\Users\Lenovo\AppData\Roaming\npm;C:\Users\Lenovo\AppData\Local\Programs\Fiddler;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;;.
2021-01-12 09:59:22.901  INFO 6484 --- [clientConnector] org.apache.zookeeper.ZooKeeper           : Client environment:java.io.tmpdir=C:\Users\Lenovo\AppData\Local\Temp\
2021-01-12 09:59:22.901  INFO 6484 --- [clientConnector] org.apache.zookeeper.ZooKeeper           : Client environment:java.compiler=<NA>
2021-01-12 09:59:22.901  INFO 6484 --- [clientConnector] org.apache.zookeeper.ZooKeeper           : Client environment:os.name=Windows 10
2021-01-12 09:59:22.901  INFO 6484 --- [clientConnector] org.apache.zookeeper.ZooKeeper           : Client environment:os.arch=amd64
2021-01-12 09:59:22.901  INFO 6484 --- [clientConnector] org.apache.zookeeper.ZooKeeper           : Client environment:os.version=10.0
2021-01-12 09:59:22.901  INFO 6484 --- [clientConnector] org.apache.zookeeper.ZooKeeper           : Client environment:user.name=Lenovo
2021-01-12 09:59:22.902  INFO 6484 --- [clientConnector] org.apache.zookeeper.ZooKeeper           : Client environment:user.home=C:\Users\Lenovo
2021-01-12 09:59:22.902  INFO 6484 --- [clientConnector] org.apache.zookeeper.ZooKeeper           : Client environment:user.dir=E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service
2021-01-12 09:59:22.903  INFO 6484 --- [clientConnector] org.apache.zookeeper.ZooKeeper           : Initiating client connection, connectString=192.168.247.131:2181 sessionTimeout=30000 watcher=org.I0Itec.zkclient.ZkClient@256f6011
2021-01-12 09:59:31.981  INFO 6484 --- [8.247.131:2181)] org.apache.zookeeper.ClientCnxn          : Opening socket connection to server 192.168.247.131/192.168.247.131:2181. Will not attempt to authenticate using SASL (unknown error)
2021-01-12 09:59:33.986  INFO 6484 --- [8.247.131:2181)] org.apache.zookeeper.ClientCnxn          : Socket error occurred: 192.168.247.131/192.168.247.131:2181: Connection refused: no further information
2021-01-12 09:59:43.835  INFO 6484 --- [           main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-01-12 09:59:43.840 ERROR 6484 --- [           main] o.s.boot.SpringApplication               : Application run failed

java.lang.IllegalStateException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416750875&version=1.0.0 to registry 192.168.247.131:2181, cause: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416750875&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:150) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:126) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:146) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:55) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:60) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:123) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:49) ~[dubbo-2.6.4.jar:2.6.4]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127) [spring-boot-test-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:44) [spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.1.jar:2.22.1]
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416750875&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:116) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:137) ~[dubbo-2.6.4.jar:2.6.4]
	... 53 common frames omitted
Caused by: java.lang.IllegalStateException: Zookeeper is not connected yet!
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkClientWrapper.createPersistent(ZkClientWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.createPersistent(ZkclientZookeeperClient.java:64) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:67) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:114) ~[dubbo-2.6.4.jar:2.6.4]
	... 54 common frames omitted

2021-01-12 09:59:43.844  INFO 6484 --- [           main] org.mongodb.driver.connection            : Closed connection [connectionId{localValue:2, serverValue:36}] to 192.168.247.131:27017 because the pool has been closed.
2021-01-12 09:59:43.847  INFO 6484 --- [           main] f.a.ReferenceAnnotationBeanPostProcessor : class com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
2021-01-12 09:59:43.863  INFO 6484 --- [           main] a.b.d.c.e.WelcomeLogoApplicationListener : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.4) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

2021-01-12 09:59:43.863  INFO 6484 --- [           main] e.OverrideDubboConfigApplicationListener : Dubbo Config was overridden by externalized configuration {dubbo.application.name=dubbo-provider-tanhua, dubbo.protocol.name=dubbo, dubbo.protocol.port=20880, dubbo.registry.address=zookeeper://192.168.247.131:2181, dubbo.registry.client=zkclient, dubbo.scan.basePackages=com.tanhua.dubbo.server}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.1.0.RELEASE)

2021-01-12 09:59:43.871  INFO 6484 --- [           main] com.tanhua.dubbo.server.api.TestQuanzi   : Starting TestQuanzi on DESKTOP-A7UV77A with PID 6484 (started by Lenovo in E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service)
2021-01-12 09:59:43.871  INFO 6484 --- [           main] com.tanhua.dubbo.server.api.TestQuanzi   : No active profile set, falling back to default profiles: default
2021-01-12 09:59:43.971  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.ApplicationConfig#0, class : com.alibaba.dubbo.config.ApplicationConfig] has been registered.
2021-01-12 09:59:43.971  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.ApplicationConfig#0] has been registered.
2021-01-12 09:59:43.971  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.RegistryConfig#0, class : com.alibaba.dubbo.config.RegistryConfig] has been registered.
2021-01-12 09:59:43.971  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.RegistryConfig#0] has been registered.
2021-01-12 09:59:43.971  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.ProtocolConfig#0, class : com.alibaba.dubbo.config.ProtocolConfig] has been registered.
2021-01-12 09:59:43.972  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.ProtocolConfig#0] has been registered.
2021-01-12 09:59:43.980  INFO 6484 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2021-01-12 09:59:43.986  INFO 6484 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 repository interfaces.
2021-01-12 09:59:44.004  INFO 6484 --- [           main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2021-01-12 09:59:44.031  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:44.032  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:44.033  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:44.046  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.ApplicationConfig#0] have been binding by prefix of configuration properties : dubbo.application
2021-01-12 09:59:44.054  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
2021-01-12 09:59:44.065  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
2021-01-12 09:59:44.097  INFO 6484 --- [           main] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[192.168.247.131:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2021-01-12 09:59:44.109  INFO 6484 --- [8.247.131:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:3, serverValue:37}] to 192.168.247.131:27017
2021-01-12 09:59:44.111  INFO 6484 --- [8.247.131:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=192.168.247.131:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 3]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1752400}
2021-01-12 09:59:44.168  INFO 6484 --- [8.247.131:2181)] org.apache.zookeeper.ClientCnxn          : Opening socket connection to server 192.168.247.131/192.168.247.131:2181. Will not attempt to authenticate using SASL (unknown error)
2021-01-12 09:59:44.208  INFO 6484 --- [           main] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:4, serverValue:38}] to 192.168.247.131:27017
2021-01-12 09:59:44.325  INFO 6484 --- [           main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-01-12 09:59:44.327 ERROR 6484 --- [           main] o.s.boot.SpringApplication               : Application run failed

java.lang.IllegalStateException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416784319&version=1.0.0 to registry 192.168.247.131:2181, cause: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416784319&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:150) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:126) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:146) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:55) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:60) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:123) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:49) ~[dubbo-2.6.4.jar:2.6.4]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127) [spring-boot-test-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.outputConditionEvaluationReport(SpringBootDependencyInjectionTestExecutionListener.java:54) [spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:47) [spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.1.jar:2.22.1]
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416784319&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:116) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:137) ~[dubbo-2.6.4.jar:2.6.4]
	... 52 common frames omitted
Caused by: java.lang.IllegalStateException: Zookeeper is not connected yet!
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkClientWrapper.createPersistent(ZkClientWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.createPersistent(ZkclientZookeeperClient.java:64) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:67) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:114) ~[dubbo-2.6.4.jar:2.6.4]
	... 53 common frames omitted

2021-01-12 09:59:44.329  INFO 6484 --- [           main] org.mongodb.driver.connection            : Closed connection [connectionId{localValue:4, serverValue:38}] to 192.168.247.131:27017 because the pool has been closed.
2021-01-12 09:59:44.330  INFO 6484 --- [           main] f.a.ReferenceAnnotationBeanPostProcessor : class com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
2021-01-12 09:59:44.333 ERROR 6484 --- [           main] o.s.test.context.TestContextManager      : Caught exception while allowing TestExecutionListener [org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@305b7c14] to prepare test instance [com.tanhua.dubbo.server.api.TestQuanzi@10d68fcd]

java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:44) ~[spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.1.jar:2.22.1]
Caused by: java.lang.IllegalStateException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416750875&version=1.0.0 to registry 192.168.247.131:2181, cause: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416750875&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:150) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:126) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:146) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:55) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:60) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:123) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:49) ~[dubbo-2.6.4.jar:2.6.4]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127) ~[spring-boot-test-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	... 28 common frames omitted
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416750875&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:116) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:137) ~[dubbo-2.6.4.jar:2.6.4]
	... 53 common frames omitted
Caused by: java.lang.IllegalStateException: Zookeeper is not connected yet!
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkClientWrapper.createPersistent(ZkClientWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.createPersistent(ZkclientZookeeperClient.java:64) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:67) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:114) ~[dubbo-2.6.4.jar:2.6.4]
	... 54 common frames omitted

]]></system-out>
    <system-err><![CDATA[SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/E:/APP/backup_repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/E:/APP/backup_repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
log4j:WARN No appenders could be found for logger (com.alibaba.dubbo.common.logger.LoggerFactory).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
]]></system-err>
  </testcase>
  <testcase name="testSaveLoveComment" classname="com.tanhua.dubbo.server.api.TestQuanzi" time="0">
    <error message="Failed to load ApplicationContext" type="java.lang.IllegalStateException"><![CDATA[java.lang.IllegalStateException: Failed to load ApplicationContext
Caused by: java.lang.IllegalStateException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416784846&version=1.0.0 to registry 192.168.247.131:2181, cause: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416784846&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416784846&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
Caused by: java.lang.IllegalStateException: Zookeeper is not connected yet!
]]></error>
    <system-out><![CDATA[2021-01-12 09:59:44.373  INFO 6484 --- [           main] a.b.d.c.e.WelcomeLogoApplicationListener : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.4) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

2021-01-12 09:59:44.374  INFO 6484 --- [           main] e.OverrideDubboConfigApplicationListener : Dubbo Config was overridden by externalized configuration {dubbo.application.name=dubbo-provider-tanhua, dubbo.protocol.name=dubbo, dubbo.protocol.port=20880, dubbo.registry.address=zookeeper://192.168.247.131:2181, dubbo.registry.client=zkclient, dubbo.scan.basePackages=com.tanhua.dubbo.server}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.1.0.RELEASE)

2021-01-12 09:59:44.382  INFO 6484 --- [           main] com.tanhua.dubbo.server.api.TestQuanzi   : Starting TestQuanzi on DESKTOP-A7UV77A with PID 6484 (started by Lenovo in E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service)
2021-01-12 09:59:44.383  INFO 6484 --- [           main] com.tanhua.dubbo.server.api.TestQuanzi   : No active profile set, falling back to default profiles: default
2021-01-12 09:59:44.479  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.ApplicationConfig#0, class : com.alibaba.dubbo.config.ApplicationConfig] has been registered.
2021-01-12 09:59:44.479  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.ApplicationConfig#0] has been registered.
2021-01-12 09:59:44.479  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.RegistryConfig#0, class : com.alibaba.dubbo.config.RegistryConfig] has been registered.
2021-01-12 09:59:44.479  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.RegistryConfig#0] has been registered.
2021-01-12 09:59:44.480  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.ProtocolConfig#0, class : com.alibaba.dubbo.config.ProtocolConfig] has been registered.
2021-01-12 09:59:44.480  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.ProtocolConfig#0] has been registered.
2021-01-12 09:59:44.489  INFO 6484 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2021-01-12 09:59:44.494  INFO 6484 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 repository interfaces.
2021-01-12 09:59:44.513  INFO 6484 --- [           main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2021-01-12 09:59:44.535  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:44.536  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:44.537  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:44.552  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.ApplicationConfig#0] have been binding by prefix of configuration properties : dubbo.application
2021-01-12 09:59:44.654  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
2021-01-12 09:59:44.663  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
2021-01-12 09:59:44.684  INFO 6484 --- [           main] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[192.168.247.131:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2021-01-12 09:59:44.690  INFO 6484 --- [8.247.131:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:5, serverValue:39}] to 192.168.247.131:27017
2021-01-12 09:59:44.692  INFO 6484 --- [8.247.131:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=192.168.247.131:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 3]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=869900}
2021-01-12 09:59:44.766  INFO 6484 --- [           main] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:6, serverValue:40}] to 192.168.247.131:27017
2021-01-12 09:59:44.848  INFO 6484 --- [           main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-01-12 09:59:44.849 ERROR 6484 --- [           main] o.s.boot.SpringApplication               : Application run failed

java.lang.IllegalStateException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416784846&version=1.0.0 to registry 192.168.247.131:2181, cause: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416784846&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:150) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:126) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:146) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:55) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:60) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:123) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:49) ~[dubbo-2.6.4.jar:2.6.4]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127) [spring-boot-test-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:44) [spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.1.jar:2.22.1]
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416784846&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:116) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:137) ~[dubbo-2.6.4.jar:2.6.4]
	... 53 common frames omitted
Caused by: java.lang.IllegalStateException: Zookeeper is not connected yet!
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkClientWrapper.createPersistent(ZkClientWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.createPersistent(ZkclientZookeeperClient.java:64) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:67) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:114) ~[dubbo-2.6.4.jar:2.6.4]
	... 54 common frames omitted

2021-01-12 09:59:44.850  INFO 6484 --- [           main] org.mongodb.driver.connection            : Closed connection [connectionId{localValue:6, serverValue:40}] to 192.168.247.131:27017 because the pool has been closed.
2021-01-12 09:59:44.851  INFO 6484 --- [           main] f.a.ReferenceAnnotationBeanPostProcessor : class com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
2021-01-12 09:59:44.869  INFO 6484 --- [           main] a.b.d.c.e.WelcomeLogoApplicationListener : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.4) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

2021-01-12 09:59:44.870  INFO 6484 --- [           main] e.OverrideDubboConfigApplicationListener : Dubbo Config was overridden by externalized configuration {dubbo.application.name=dubbo-provider-tanhua, dubbo.protocol.name=dubbo, dubbo.protocol.port=20880, dubbo.registry.address=zookeeper://192.168.247.131:2181, dubbo.registry.client=zkclient, dubbo.scan.basePackages=com.tanhua.dubbo.server}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.1.0.RELEASE)

2021-01-12 09:59:44.877  INFO 6484 --- [           main] com.tanhua.dubbo.server.api.TestQuanzi   : Starting TestQuanzi on DESKTOP-A7UV77A with PID 6484 (started by Lenovo in E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service)
2021-01-12 09:59:44.878  INFO 6484 --- [           main] com.tanhua.dubbo.server.api.TestQuanzi   : No active profile set, falling back to default profiles: default
2021-01-12 09:59:44.959  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.ApplicationConfig#0, class : com.alibaba.dubbo.config.ApplicationConfig] has been registered.
2021-01-12 09:59:44.960  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.ApplicationConfig#0] has been registered.
2021-01-12 09:59:44.960  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.RegistryConfig#0, class : com.alibaba.dubbo.config.RegistryConfig] has been registered.
2021-01-12 09:59:44.960  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.RegistryConfig#0] has been registered.
2021-01-12 09:59:44.960  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.ProtocolConfig#0, class : com.alibaba.dubbo.config.ProtocolConfig] has been registered.
2021-01-12 09:59:44.960  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.ProtocolConfig#0] has been registered.
2021-01-12 09:59:44.972  INFO 6484 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2021-01-12 09:59:44.979  INFO 6484 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 repository interfaces.
2021-01-12 09:59:45.007  INFO 6484 --- [           main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2021-01-12 09:59:45.028  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:45.029  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:45.030  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:45.046  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.ApplicationConfig#0] have been binding by prefix of configuration properties : dubbo.application
2021-01-12 09:59:45.052  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
2021-01-12 09:59:45.061  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
2021-01-12 09:59:45.083  INFO 6484 --- [           main] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[192.168.247.131:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2021-01-12 09:59:45.093  INFO 6484 --- [8.247.131:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:7, serverValue:41}] to 192.168.247.131:27017
2021-01-12 09:59:45.095  INFO 6484 --- [8.247.131:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=192.168.247.131:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 3]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1603600}
2021-01-12 09:59:45.160  INFO 6484 --- [           main] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:8, serverValue:42}] to 192.168.247.131:27017
2021-01-12 09:59:45.225  INFO 6484 --- [           main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-01-12 09:59:45.226 ERROR 6484 --- [           main] o.s.boot.SpringApplication               : Application run failed

java.lang.IllegalStateException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416785220&version=1.0.0 to registry 192.168.247.131:2181, cause: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416785220&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:150) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:126) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:146) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:55) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:60) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:123) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:49) ~[dubbo-2.6.4.jar:2.6.4]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127) [spring-boot-test-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.outputConditionEvaluationReport(SpringBootDependencyInjectionTestExecutionListener.java:54) [spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:47) [spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.1.jar:2.22.1]
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416785220&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:116) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:137) ~[dubbo-2.6.4.jar:2.6.4]
	... 52 common frames omitted
Caused by: java.lang.IllegalStateException: Zookeeper is not connected yet!
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkClientWrapper.createPersistent(ZkClientWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.createPersistent(ZkclientZookeeperClient.java:64) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:67) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:114) ~[dubbo-2.6.4.jar:2.6.4]
	... 53 common frames omitted

2021-01-12 09:59:45.227  INFO 6484 --- [           main] org.mongodb.driver.connection            : Closed connection [connectionId{localValue:8, serverValue:42}] to 192.168.247.131:27017 because the pool has been closed.
2021-01-12 09:59:45.228  INFO 6484 --- [           main] f.a.ReferenceAnnotationBeanPostProcessor : class com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
2021-01-12 09:59:45.233 ERROR 6484 --- [           main] o.s.test.context.TestContextManager      : Caught exception while allowing TestExecutionListener [org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@305b7c14] to prepare test instance [com.tanhua.dubbo.server.api.TestQuanzi@338b49d3]

java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:44) ~[spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.1.jar:2.22.1]
Caused by: java.lang.IllegalStateException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416784846&version=1.0.0 to registry 192.168.247.131:2181, cause: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416784846&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:150) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:126) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:146) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:55) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:60) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:123) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:49) ~[dubbo-2.6.4.jar:2.6.4]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127) ~[spring-boot-test-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	... 28 common frames omitted
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416784846&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:116) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:137) ~[dubbo-2.6.4.jar:2.6.4]
	... 53 common frames omitted
Caused by: java.lang.IllegalStateException: Zookeeper is not connected yet!
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkClientWrapper.createPersistent(ZkClientWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.createPersistent(ZkclientZookeeperClient.java:64) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:67) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:114) ~[dubbo-2.6.4.jar:2.6.4]
	... 54 common frames omitted

]]></system-out>
  </testcase>
  <testcase name="testRemoveComment" classname="com.tanhua.dubbo.server.api.TestQuanzi" time="0">
    <error message="Failed to load ApplicationContext" type="java.lang.IllegalStateException"><![CDATA[java.lang.IllegalStateException: Failed to load ApplicationContext
Caused by: java.lang.IllegalStateException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416785580&version=1.0.0 to registry 192.168.247.131:2181, cause: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416785580&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416785580&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
Caused by: java.lang.IllegalStateException: Zookeeper is not connected yet!
]]></error>
    <system-out><![CDATA[2021-01-12 09:59:45.249  INFO 6484 --- [           main] a.b.d.c.e.WelcomeLogoApplicationListener : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.4) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

2021-01-12 09:59:45.249  INFO 6484 --- [           main] e.OverrideDubboConfigApplicationListener : Dubbo Config was overridden by externalized configuration {dubbo.application.name=dubbo-provider-tanhua, dubbo.protocol.name=dubbo, dubbo.protocol.port=20880, dubbo.registry.address=zookeeper://192.168.247.131:2181, dubbo.registry.client=zkclient, dubbo.scan.basePackages=com.tanhua.dubbo.server}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.1.0.RELEASE)

2021-01-12 09:59:45.255  INFO 6484 --- [           main] com.tanhua.dubbo.server.api.TestQuanzi   : Starting TestQuanzi on DESKTOP-A7UV77A with PID 6484 (started by Lenovo in E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service)
2021-01-12 09:59:45.255  INFO 6484 --- [           main] com.tanhua.dubbo.server.api.TestQuanzi   : No active profile set, falling back to default profiles: default
2021-01-12 09:59:45.341  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.ApplicationConfig#0, class : com.alibaba.dubbo.config.ApplicationConfig] has been registered.
2021-01-12 09:59:45.342  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.ApplicationConfig#0] has been registered.
2021-01-12 09:59:45.342  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.RegistryConfig#0, class : com.alibaba.dubbo.config.RegistryConfig] has been registered.
2021-01-12 09:59:45.342  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.RegistryConfig#0] has been registered.
2021-01-12 09:59:45.342  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.ProtocolConfig#0, class : com.alibaba.dubbo.config.ProtocolConfig] has been registered.
2021-01-12 09:59:45.342  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.ProtocolConfig#0] has been registered.
2021-01-12 09:59:45.355  INFO 6484 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2021-01-12 09:59:45.361  INFO 6484 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 repository interfaces.
2021-01-12 09:59:45.379  INFO 6484 --- [           main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2021-01-12 09:59:45.403  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:45.404  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:45.405  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:45.421  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.ApplicationConfig#0] have been binding by prefix of configuration properties : dubbo.application
2021-01-12 09:59:45.425  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
2021-01-12 09:59:45.430  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
2021-01-12 09:59:45.448  INFO 6484 --- [           main] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[192.168.247.131:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2021-01-12 09:59:45.453  INFO 6484 --- [8.247.131:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:9, serverValue:43}] to 192.168.247.131:27017
2021-01-12 09:59:45.454  INFO 6484 --- [8.247.131:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=192.168.247.131:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 3]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=855800}
2021-01-12 09:59:45.504  INFO 6484 --- [           main] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:10, serverValue:44}] to 192.168.247.131:27017
2021-01-12 09:59:45.584  INFO 6484 --- [           main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-01-12 09:59:45.586 ERROR 6484 --- [           main] o.s.boot.SpringApplication               : Application run failed

java.lang.IllegalStateException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416785580&version=1.0.0 to registry 192.168.247.131:2181, cause: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416785580&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:150) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:126) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:146) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:55) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:60) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:123) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:49) ~[dubbo-2.6.4.jar:2.6.4]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127) [spring-boot-test-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:44) [spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.1.jar:2.22.1]
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416785580&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:116) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:137) ~[dubbo-2.6.4.jar:2.6.4]
	... 53 common frames omitted
Caused by: java.lang.IllegalStateException: Zookeeper is not connected yet!
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkClientWrapper.createPersistent(ZkClientWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.createPersistent(ZkclientZookeeperClient.java:64) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:67) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:114) ~[dubbo-2.6.4.jar:2.6.4]
	... 54 common frames omitted

2021-01-12 09:59:45.587  INFO 6484 --- [           main] org.mongodb.driver.connection            : Closed connection [connectionId{localValue:10, serverValue:44}] to 192.168.247.131:27017 because the pool has been closed.
2021-01-12 09:59:45.588  INFO 6484 --- [           main] f.a.ReferenceAnnotationBeanPostProcessor : class com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
2021-01-12 09:59:45.604  INFO 6484 --- [           main] a.b.d.c.e.WelcomeLogoApplicationListener : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.4) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

2021-01-12 09:59:45.605  INFO 6484 --- [           main] e.OverrideDubboConfigApplicationListener : Dubbo Config was overridden by externalized configuration {dubbo.application.name=dubbo-provider-tanhua, dubbo.protocol.name=dubbo, dubbo.protocol.port=20880, dubbo.registry.address=zookeeper://192.168.247.131:2181, dubbo.registry.client=zkclient, dubbo.scan.basePackages=com.tanhua.dubbo.server}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.1.0.RELEASE)

2021-01-12 09:59:45.610  INFO 6484 --- [           main] com.tanhua.dubbo.server.api.TestQuanzi   : Starting TestQuanzi on DESKTOP-A7UV77A with PID 6484 (started by Lenovo in E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service)
2021-01-12 09:59:45.610  INFO 6484 --- [           main] com.tanhua.dubbo.server.api.TestQuanzi   : No active profile set, falling back to default profiles: default
2021-01-12 09:59:45.669  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.ApplicationConfig#0, class : com.alibaba.dubbo.config.ApplicationConfig] has been registered.
2021-01-12 09:59:45.669  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.ApplicationConfig#0] has been registered.
2021-01-12 09:59:45.669  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.RegistryConfig#0, class : com.alibaba.dubbo.config.RegistryConfig] has been registered.
2021-01-12 09:59:45.669  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.RegistryConfig#0] has been registered.
2021-01-12 09:59:45.670  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.ProtocolConfig#0, class : com.alibaba.dubbo.config.ProtocolConfig] has been registered.
2021-01-12 09:59:45.670  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.ProtocolConfig#0] has been registered.
2021-01-12 09:59:45.677  INFO 6484 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2021-01-12 09:59:45.682  INFO 6484 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 repository interfaces.
2021-01-12 09:59:45.706  INFO 6484 --- [           main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2021-01-12 09:59:45.740  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:45.746  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:45.750  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:45.768  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.ApplicationConfig#0] have been binding by prefix of configuration properties : dubbo.application
2021-01-12 09:59:45.773  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
2021-01-12 09:59:45.780  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
2021-01-12 09:59:45.801  INFO 6484 --- [           main] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[192.168.247.131:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2021-01-12 09:59:45.813  INFO 6484 --- [8.247.131:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:11, serverValue:45}] to 192.168.247.131:27017
2021-01-12 09:59:45.818  INFO 6484 --- [8.247.131:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=192.168.247.131:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 3]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2926600}
2021-01-12 09:59:45.904  INFO 6484 --- [           main] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:12, serverValue:46}] to 192.168.247.131:27017
2021-01-12 09:59:46.004  INFO 6484 --- [           main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-01-12 09:59:46.006 ERROR 6484 --- [           main] o.s.boot.SpringApplication               : Application run failed

java.lang.IllegalStateException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416785998&version=1.0.0 to registry 192.168.247.131:2181, cause: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416785998&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:150) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:126) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:146) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:55) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:60) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:123) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:49) ~[dubbo-2.6.4.jar:2.6.4]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127) [spring-boot-test-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.outputConditionEvaluationReport(SpringBootDependencyInjectionTestExecutionListener.java:54) [spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:47) [spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.1.jar:2.22.1]
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416785998&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:116) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:137) ~[dubbo-2.6.4.jar:2.6.4]
	... 52 common frames omitted
Caused by: java.lang.IllegalStateException: Zookeeper is not connected yet!
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkClientWrapper.createPersistent(ZkClientWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.createPersistent(ZkclientZookeeperClient.java:64) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:67) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:114) ~[dubbo-2.6.4.jar:2.6.4]
	... 53 common frames omitted

2021-01-12 09:59:46.007  INFO 6484 --- [           main] org.mongodb.driver.connection            : Closed connection [connectionId{localValue:12, serverValue:46}] to 192.168.247.131:27017 because the pool has been closed.
2021-01-12 09:59:46.008  INFO 6484 --- [           main] f.a.ReferenceAnnotationBeanPostProcessor : class com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
2021-01-12 09:59:46.010 ERROR 6484 --- [           main] o.s.test.context.TestContextManager      : Caught exception while allowing TestExecutionListener [org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@305b7c14] to prepare test instance [com.tanhua.dubbo.server.api.TestQuanzi@d16be4f]

java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:44) ~[spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.1.jar:2.22.1]
Caused by: java.lang.IllegalStateException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416785580&version=1.0.0 to registry 192.168.247.131:2181, cause: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416785580&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:150) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:126) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:146) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:55) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:60) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:123) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:49) ~[dubbo-2.6.4.jar:2.6.4]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127) ~[spring-boot-test-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	... 28 common frames omitted
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416785580&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:116) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:137) ~[dubbo-2.6.4.jar:2.6.4]
	... 53 common frames omitted
Caused by: java.lang.IllegalStateException: Zookeeper is not connected yet!
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkClientWrapper.createPersistent(ZkClientWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.createPersistent(ZkclientZookeeperClient.java:64) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:67) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:114) ~[dubbo-2.6.4.jar:2.6.4]
	... 54 common frames omitted

]]></system-out>
  </testcase>
  <testcase name="testQueryCommentList" classname="com.tanhua.dubbo.server.api.TestQuanzi" time="0">
    <error message="Failed to load ApplicationContext" type="java.lang.IllegalStateException"><![CDATA[java.lang.IllegalStateException: Failed to load ApplicationContext
Caused by: java.lang.IllegalStateException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416786412&version=1.0.0 to registry 192.168.247.131:2181, cause: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416786412&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416786412&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
Caused by: java.lang.IllegalStateException: Zookeeper is not connected yet!
]]></error>
    <system-out><![CDATA[2021-01-12 09:59:46.030  INFO 6484 --- [           main] a.b.d.c.e.WelcomeLogoApplicationListener : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.4) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

2021-01-12 09:59:46.030  INFO 6484 --- [           main] e.OverrideDubboConfigApplicationListener : Dubbo Config was overridden by externalized configuration {dubbo.application.name=dubbo-provider-tanhua, dubbo.protocol.name=dubbo, dubbo.protocol.port=20880, dubbo.registry.address=zookeeper://192.168.247.131:2181, dubbo.registry.client=zkclient, dubbo.scan.basePackages=com.tanhua.dubbo.server}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.1.0.RELEASE)

2021-01-12 09:59:46.039  INFO 6484 --- [           main] com.tanhua.dubbo.server.api.TestQuanzi   : Starting TestQuanzi on DESKTOP-A7UV77A with PID 6484 (started by Lenovo in E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service)
2021-01-12 09:59:46.040  INFO 6484 --- [           main] com.tanhua.dubbo.server.api.TestQuanzi   : No active profile set, falling back to default profiles: default
2021-01-12 09:59:46.132  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.ApplicationConfig#0, class : com.alibaba.dubbo.config.ApplicationConfig] has been registered.
2021-01-12 09:59:46.132  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.ApplicationConfig#0] has been registered.
2021-01-12 09:59:46.133  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.RegistryConfig#0, class : com.alibaba.dubbo.config.RegistryConfig] has been registered.
2021-01-12 09:59:46.133  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.RegistryConfig#0] has been registered.
2021-01-12 09:59:46.134  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.ProtocolConfig#0, class : com.alibaba.dubbo.config.ProtocolConfig] has been registered.
2021-01-12 09:59:46.134  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.ProtocolConfig#0] has been registered.
2021-01-12 09:59:46.146  INFO 6484 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2021-01-12 09:59:46.154  INFO 6484 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 repository interfaces.
2021-01-12 09:59:46.170  INFO 6484 --- [           main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2021-01-12 09:59:46.186  INFO 6484 --- [8.247.131:2181)] org.apache.zookeeper.ClientCnxn          : Socket error occurred: 192.168.247.131/192.168.247.131:2181: Connection refused: no further information
2021-01-12 09:59:46.195  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:46.197  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:46.198  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:46.214  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.ApplicationConfig#0] have been binding by prefix of configuration properties : dubbo.application
2021-01-12 09:59:46.219  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
2021-01-12 09:59:46.225  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
2021-01-12 09:59:46.254  INFO 6484 --- [           main] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[192.168.247.131:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2021-01-12 09:59:46.285  INFO 6484 --- [8.247.131:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:13, serverValue:47}] to 192.168.247.131:27017
2021-01-12 09:59:46.287  INFO 6484 --- [8.247.131:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=192.168.247.131:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 3]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1919100}
2021-01-12 09:59:46.347  INFO 6484 --- [           main] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:14, serverValue:48}] to 192.168.247.131:27017
2021-01-12 09:59:46.416  INFO 6484 --- [           main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-01-12 09:59:46.417 ERROR 6484 --- [           main] o.s.boot.SpringApplication               : Application run failed

java.lang.IllegalStateException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416786412&version=1.0.0 to registry 192.168.247.131:2181, cause: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416786412&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:150) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:126) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:146) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:55) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:60) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:123) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:49) ~[dubbo-2.6.4.jar:2.6.4]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127) [spring-boot-test-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:44) [spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.1.jar:2.22.1]
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416786412&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:116) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:137) ~[dubbo-2.6.4.jar:2.6.4]
	... 53 common frames omitted
Caused by: java.lang.IllegalStateException: Zookeeper is not connected yet!
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkClientWrapper.createPersistent(ZkClientWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.createPersistent(ZkclientZookeeperClient.java:64) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:67) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:114) ~[dubbo-2.6.4.jar:2.6.4]
	... 54 common frames omitted

2021-01-12 09:59:46.418  INFO 6484 --- [           main] org.mongodb.driver.connection            : Closed connection [connectionId{localValue:14, serverValue:48}] to 192.168.247.131:27017 because the pool has been closed.
2021-01-12 09:59:46.419  INFO 6484 --- [           main] f.a.ReferenceAnnotationBeanPostProcessor : class com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
2021-01-12 09:59:46.435  INFO 6484 --- [           main] a.b.d.c.e.WelcomeLogoApplicationListener : 

 :: Dubbo Spring Boot (v0.2.0) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.6.4) : https://github.com/apache/incubator-dubbo
 :: Google group : dev@dubbo.incubator.apache.org

2021-01-12 09:59:46.436  INFO 6484 --- [           main] e.OverrideDubboConfigApplicationListener : Dubbo Config was overridden by externalized configuration {dubbo.application.name=dubbo-provider-tanhua, dubbo.protocol.name=dubbo, dubbo.protocol.port=20880, dubbo.registry.address=zookeeper://192.168.247.131:2181, dubbo.registry.client=zkclient, dubbo.scan.basePackages=com.tanhua.dubbo.server}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.1.0.RELEASE)

2021-01-12 09:59:46.443  INFO 6484 --- [           main] com.tanhua.dubbo.server.api.TestQuanzi   : Starting TestQuanzi on DESKTOP-A7UV77A with PID 6484 (started by Lenovo in E:\APP\my-tanhua\my-tanhua\my-tanhua-dubbo\my-tanhua-dubbo-service)
2021-01-12 09:59:46.443  INFO 6484 --- [           main] com.tanhua.dubbo.server.api.TestQuanzi   : No active profile set, falling back to default profiles: default
2021-01-12 09:59:46.514  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.ApplicationConfig#0, class : com.alibaba.dubbo.config.ApplicationConfig] has been registered.
2021-01-12 09:59:46.515  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.ApplicationConfig#0] has been registered.
2021-01-12 09:59:46.515  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.RegistryConfig#0, class : com.alibaba.dubbo.config.RegistryConfig] has been registered.
2021-01-12 09:59:46.515  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.RegistryConfig#0] has been registered.
2021-01-12 09:59:46.515  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The dubbo config bean definition [name : com.alibaba.dubbo.config.ProtocolConfig#0, class : com.alibaba.dubbo.config.ProtocolConfig] has been registered.
2021-01-12 09:59:46.515  INFO 6484 --- [           main] .a.d.c.s.c.a.DubboConfigBindingRegistrar : The BeanPostProcessor bean definition [com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : com.alibaba.dubbo.config.ProtocolConfig#0] has been registered.
2021-01-12 09:59:46.523  INFO 6484 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2021-01-12 09:59:46.527  INFO 6484 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 repository interfaces.
2021-01-12 09:59:46.538  INFO 6484 --- [           main] o.s.c.a.ConfigurationClassPostProcessor  : Cannot enhance @Configuration bean definition 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2021-01-12 09:59:46.557  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:46.558  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:46.559  INFO 6484 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'relaxedDubboConfigBinder' of type [com.alibaba.boot.dubbo.autoconfigure.RelaxedDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-01-12 09:59:46.572  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.ApplicationConfig#0] have been binding by prefix of configuration properties : dubbo.application
2021-01-12 09:59:46.589  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
2021-01-12 09:59:46.595  INFO 6484 --- [           main] .f.a.DubboConfigBindingBeanPostProcessor : The properties of bean [name : com.alibaba.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
2021-01-12 09:59:46.612  INFO 6484 --- [           main] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[192.168.247.131:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2021-01-12 09:59:46.619  INFO 6484 --- [8.247.131:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:15, serverValue:49}] to 192.168.247.131:27017
2021-01-12 09:59:46.620  INFO 6484 --- [8.247.131:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=192.168.247.131:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 3]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=903900}
2021-01-12 09:59:46.684  INFO 6484 --- [           main] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:16, serverValue:50}] to 192.168.247.131:27017
2021-01-12 09:59:46.790  INFO 6484 --- [           main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-01-12 09:59:46.792 ERROR 6484 --- [           main] o.s.boot.SpringApplication               : Application run failed

java.lang.IllegalStateException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416786769&version=1.0.0 to registry 192.168.247.131:2181, cause: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416786769&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:150) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:126) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:146) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:55) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:60) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:123) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:49) ~[dubbo-2.6.4.jar:2.6.4]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127) [spring-boot-test-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.outputConditionEvaluationReport(SpringBootDependencyInjectionTestExecutionListener.java:54) [spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:47) [spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.1.jar:2.22.1]
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416786769&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:116) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:137) ~[dubbo-2.6.4.jar:2.6.4]
	... 52 common frames omitted
Caused by: java.lang.IllegalStateException: Zookeeper is not connected yet!
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkClientWrapper.createPersistent(ZkClientWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.createPersistent(ZkclientZookeeperClient.java:64) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:67) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:114) ~[dubbo-2.6.4.jar:2.6.4]
	... 53 common frames omitted

2021-01-12 09:59:46.793  INFO 6484 --- [           main] org.mongodb.driver.connection            : Closed connection [connectionId{localValue:16, serverValue:50}] to 192.168.247.131:27017 because the pool has been closed.
2021-01-12 09:59:46.794  INFO 6484 --- [           main] f.a.ReferenceAnnotationBeanPostProcessor : class com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
2021-01-12 09:59:46.796 ERROR 6484 --- [           main] o.s.test.context.TestContextManager      : Caught exception while allowing TestExecutionListener [org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@305b7c14] to prepare test instance [com.tanhua.dubbo.server.api.TestQuanzi@1e225820]

java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener.prepareTestInstance(SpringBootDependencyInjectionTestExecutionListener.java:44) ~[spring-boot-test-autoconfigure-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) [surefire-junit4-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126) [surefire-booter-2.22.1.jar:2.22.1]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) [surefire-booter-2.22.1.jar:2.22.1]
Caused by: java.lang.IllegalStateException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416786412&version=1.0.0 to registry 192.168.247.131:2181, cause: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416786412&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:150) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.register(RegistryProtocol.java:126) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.integration.RegistryProtocol.export(RegistryProtocol.java:146) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolListenerWrapper.export(ProtocolListenerWrapper.java:55) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper.export(ProtocolFilterWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:60) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:123) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:49) ~[dubbo-2.6.4.jar:2.6.4]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:398) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:355) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:882) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) ~[spring-boot-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:127) ~[spring-boot-test-2.1.0.RELEASE.jar:2.1.0.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) ~[spring-test-5.1.2.RELEASE.jar:5.1.2.RELEASE]
	... 28 common frames omitted
Caused by: com.alibaba.dubbo.rpc.RpcException: Failed to register dubbo://169.254.69.120:20880/com.tanhua.dubbo.server.api.QuanZiApi?anyhost=true&application=dubbo-provider-tanhua&dubbo=2.0.2&generic=false&interface=com.tanhua.dubbo.server.api.QuanZiApi&methods=savePublish,saveLikeComment,saveLoveComment,saveComment,queryPublishById,queryCommentList,queryCommentCount,queryPublishList,removeComment&pid=6484&revision=1.0-SNAPSHOT&side=provider&timestamp=1610416786412&version=1.0.0 to zookeeper zookeeper://192.168.247.131:2181/com.alibaba.dubbo.registry.RegistryService?application=dubbo-provider-tanhua&client=zkclient&dubbo=2.0.2&interface=com.alibaba.dubbo.registry.RegistryService&pid=6484&timestamp=1610416750866, cause: Zookeeper is not connected yet!
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:116) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.support.FailbackRegistry.register(FailbackRegistry.java:137) ~[dubbo-2.6.4.jar:2.6.4]
	... 53 common frames omitted
Caused by: java.lang.IllegalStateException: Zookeeper is not connected yet!
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkClientWrapper.createPersistent(ZkClientWrapper.java:98) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.zkclient.ZkclientZookeeperClient.createPersistent(ZkclientZookeeperClient.java:64) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:67) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.remoting.zookeeper.support.AbstractZookeeperClient.create(AbstractZookeeperClient.java:62) ~[dubbo-2.6.4.jar:2.6.4]
	at com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry.doRegister(ZookeeperRegistry.java:114) ~[dubbo-2.6.4.jar:2.6.4]
	... 54 common frames omitted

]]></system-out>
  </testcase>
</testsuite>